// Unary operators

trait Not { fn not(Self) -> Self; }
trait Neg { fn neg(Self) -> Self; }
trait Pos { fn pos(Self) -> Self; }
trait PreInc  { fn pre_inc (&mut Self) -> Self; }
trait PostInc { fn post_inc(&mut Self) -> Self; }
trait PreDec  { fn pre_dec (&mut Self) -> Self; }
trait PostDec { fn post_dec(&mut Self) -> Self; }

// Binary operators

trait Add { fn add(Self, Self) -> Self; }
trait Sub { fn sub(Self, Self) -> Self; }
trait Mul { fn mul(Self, Self) -> Self; }
trait Div { fn div(Self, Self) -> Self; }
trait Mod { fn mod(Self, Self) -> Self; }
trait And { fn and(Self, Self) -> Self; }
trait Or  { fn or (Self, Self) -> Self; }
trait Xor { fn xor(Self, Self) -> Self; }
trait LShft { fn lshft(Self, Self) -> Self; }
trait RShft { fn rshft(Self, Self) -> Self; }

// Comparison operators

trait CmpEq { fn cmp_eq(Self, Self) -> bool; }
trait CmpNE { fn cmp_ne(Self, Self) -> bool; }
trait CmpGT { fn cmp_gt(Self, Self) -> bool; }
trait CmpGE { fn cmp_ge(Self, Self) -> bool; }
trait CmpLT { fn cmp_lt(Self, Self) -> bool; }
trait CmpLE { fn cmp_le(Self, Self) -> bool; }

// Assignment operators

trait AssignAdd { fn assign_add(&mut Self, Self) -> (); }
trait AssignSub { fn assign_sub(&mut Self, Self) -> (); }
trait AssignMul { fn assign_mul(&mut Self, Self) -> (); }
trait AssignDiv { fn assign_div(&mut Self, Self) -> (); }
trait AssignMod { fn assign_mod(&mut Self, Self) -> (); }
trait AssignAnd { fn assign_and(&mut Self, Self) -> (); }
trait AssignOr  { fn assign_or (&mut Self, Self) -> (); }
trait AssignXor { fn assign_xor(&mut Self, Self) -> (); }
trait AssignLShft { fn assign_lshft(&mut Self, Self) -> (); }
trait AssignRShft { fn assign_rshft(&mut Self, Self) -> (); }

// Super traits

trait Dec : PreDec + PostDec {}
trait Inc : PreInc + PostInc {}
trait Bit : And + Or + Xor {}
trait Shft : LShft + RShft {}
trait Cmp : CmpGE + CmpEq + CmpLT + CmpGT {}
trait Num : Neg + Pos + Inc + Dec + Add + Sub + Mul + Div + Mod + AssignAdd + AssignSub + AssignMul + AssignDiv + AssignMod + Cmp {}

impl Not         for bool {}
impl And         for bool {}
impl Or          for bool {}
impl Xor         for bool {}
impl CmpEq       for bool {}
impl CmpNE       for bool {}
impl AssignAnd   for bool {}
impl AssignOr    for bool {}
impl AssignXor   for bool {}

impl Not         for i8 {}
impl Neg         for i8 {}
impl Pos         for i8 {}
impl PreInc      for i8 {}
impl PostInc     for i8 {}
impl PreDec      for i8 {}
impl PostDec     for i8 {}
impl Add         for i8 {}
impl Sub         for i8 {}
impl Mul         for i8 {}
impl Div         for i8 {}
impl Mod         for i8 {}
impl And         for i8 {}
impl Or          for i8 {}
impl Xor         for i8 {}
impl LShft       for i8 {}
impl RShft       for i8 {}
impl CmpEq       for i8 {}
impl CmpNE       for i8 {}
impl CmpGT       for i8 {}
impl CmpGE       for i8 {}
impl CmpLT       for i8 {}
impl CmpLE       for i8 {}
impl AssignAdd   for i8 {}
impl AssignSub   for i8 {}
impl AssignMul   for i8 {}
impl AssignDiv   for i8 {}
impl AssignMod   for i8 {}
impl AssignAnd   for i8 {}
impl AssignOr    for i8 {}
impl AssignXor   for i8 {}
impl AssignLShft for i8 {}
impl AssignRShft for i8 {}
impl Cmp         for i8 {}
impl Shft        for i8 {}
impl Num         for i8 {}

impl Not         for i16 {}
impl Neg         for i16 {}
impl Pos         for i16 {}
impl PreInc      for i16 {}
impl PostInc     for i16 {}
impl PreDec      for i16 {}
impl PostDec     for i16 {}
impl Add         for i16 {}
impl Sub         for i16 {}
impl Mul         for i16 {}
impl Div         for i16 {}
impl Mod         for i16 {}
impl And         for i16 {}
impl Or          for i16 {}
impl Xor         for i16 {}
impl LShft       for i16 {}
impl RShft       for i16 {}
impl CmpEq       for i16 {}
impl CmpNE       for i16 {}
impl CmpGT       for i16 {}
impl CmpGE       for i16 {}
impl CmpLT       for i16 {}
impl CmpLE       for i16 {}
impl AssignAdd   for i16 {}
impl AssignSub   for i16 {}
impl AssignMul   for i16 {}
impl AssignDiv   for i16 {}
impl AssignMod   for i16 {}
impl AssignAnd   for i16 {}
impl AssignOr    for i16 {}
impl AssignXor   for i16 {}
impl AssignLShft for i16 {}
impl AssignRShft for i16 {}
impl Cmp         for i16 {}
impl Shft        for i16 {}
impl Num         for i16 {}

impl Not         for i32 {}
impl Neg         for i32 {}
impl Pos         for i32 {}
impl PreInc      for i32 {}
impl PostInc     for i32 {}
impl PreDec      for i32 {}
impl PostDec     for i32 {}
impl Add         for i32 {}
impl Sub         for i32 {}
impl Mul         for i32 {}
impl Div         for i32 {}
impl Mod         for i32 {}
impl And         for i32 {}
impl Or          for i32 {}
impl Xor         for i32 {}
impl LShft       for i32 {}
impl RShft       for i32 {}
impl CmpEq       for i32 {}
impl CmpNE       for i32 {}
impl CmpGT       for i32 {}
impl CmpGE       for i32 {}
impl CmpLT       for i32 {}
impl CmpLE       for i32 {}
impl AssignAdd   for i32 {}
impl AssignSub   for i32 {}
impl AssignMul   for i32 {}
impl AssignDiv   for i32 {}
impl AssignMod   for i32 {}
impl AssignAnd   for i32 {}
impl AssignOr    for i32 {}
impl AssignXor   for i32 {}
impl AssignLShft for i32 {}
impl AssignRShft for i32 {}
impl Cmp         for i32 {}
impl Shft        for i32 {}
impl Num         for i32 {}

impl Not         for i64 {}
impl Neg         for i64 {}
impl Pos         for i64 {}
impl PreInc      for i64 {}
impl PostInc     for i64 {}
impl PreDec      for i64 {}
impl PostDec     for i64 {}
impl Add         for i64 {}
impl Sub         for i64 {}
impl Mul         for i64 {}
impl Div         for i64 {}
impl Mod         for i64 {}
impl And         for i64 {}
impl Or          for i64 {}
impl Xor         for i64 {}
impl LShft       for i64 {}
impl RShft       for i64 {}
impl CmpEq       for i64 {}
impl CmpNE       for i64 {}
impl CmpGT       for i64 {}
impl CmpGE       for i64 {}
impl CmpLT       for i64 {}
impl CmpLE       for i64 {}
impl AssignAdd   for i64 {}
impl AssignSub   for i64 {}
impl AssignMul   for i64 {}
impl AssignDiv   for i64 {}
impl AssignMod   for i64 {}
impl AssignAnd   for i64 {}
impl AssignOr    for i64 {}
impl AssignXor   for i64 {}
impl AssignLShft for i64 {}
impl AssignRShft for i64 {}
impl Cmp         for i64 {}
impl Shft        for i64 {}
impl Num         for i64 {}

impl Not         for u8 {}
impl Neg         for u8 {}
impl Pos         for u8 {}
impl PreInc      for u8 {}
impl PostInc     for u8 {}
impl PreDec      for u8 {}
impl PostDec     for u8 {}
impl Add         for u8 {}
impl Sub         for u8 {}
impl Mul         for u8 {}
impl Div         for u8 {}
impl Mod         for u8 {}
impl And         for u8 {}
impl Or          for u8 {}
impl Xor         for u8 {}
impl LShft       for u8 {}
impl RShft       for u8 {}
impl CmpEq       for u8 {}
impl CmpNE       for u8 {}
impl CmpGT       for u8 {}
impl CmpGE       for u8 {}
impl CmpLT       for u8 {}
impl CmpLE       for u8 {}
impl AssignAdd   for u8 {}
impl AssignSub   for u8 {}
impl AssignMul   for u8 {}
impl AssignDiv   for u8 {}
impl AssignMod   for u8 {}
impl AssignAnd   for u8 {}
impl AssignOr    for u8 {}
impl AssignXor   for u8 {}
impl AssignLShft for u8 {}
impl AssignRShft for u8 {}
impl Cmp         for u8 {}
impl Shft        for u8 {}
impl Num         for u8 {}

impl Not         for u16 {}
impl Neg         for u16 {}
impl Pos         for u16 {}
impl PreInc      for u16 {}
impl PostInc     for u16 {}
impl PreDec      for u16 {}
impl PostDec     for u16 {}
impl Add         for u16 {}
impl Sub         for u16 {}
impl Mul         for u16 {}
impl Div         for u16 {}
impl Mod         for u16 {}
impl And         for u16 {}
impl Or          for u16 {}
impl Xor         for u16 {}
impl LShft       for u16 {}
impl RShft       for u16 {}
impl CmpEq       for u16 {}
impl CmpNE       for u16 {}
impl CmpGT       for u16 {}
impl CmpGE       for u16 {}
impl CmpLT       for u16 {}
impl CmpLE       for u16 {}
impl AssignAdd   for u16 {}
impl AssignSub   for u16 {}
impl AssignMul   for u16 {}
impl AssignDiv   for u16 {}
impl AssignMod   for u16 {}
impl AssignAnd   for u16 {}
impl AssignOr    for u16 {}
impl AssignXor   for u16 {}
impl AssignLShft for u16 {}
impl AssignRShft for u16 {}
impl Cmp         for u16 {}
impl Shft        for u16 {}
impl Num         for u16 {}

impl Not         for u32 {}
impl Neg         for u32 {}
impl Pos         for u32 {}
impl PreInc      for u32 {}
impl PostInc     for u32 {}
impl PreDec      for u32 {}
impl PostDec     for u32 {}
impl Add         for u32 {}
impl Sub         for u32 {}
impl Mul         for u32 {}
impl Div         for u32 {}
impl Mod         for u32 {}
impl And         for u32 {}
impl Or          for u32 {}
impl Xor         for u32 {}
impl LShft       for u32 {}
impl RShft       for u32 {}
impl CmpEq       for u32 {}
impl CmpNE       for u32 {}
impl CmpGT       for u32 {}
impl CmpGE       for u32 {}
impl CmpLT       for u32 {}
impl CmpLE       for u32 {}
impl AssignAdd   for u32 {}
impl AssignSub   for u32 {}
impl AssignMul   for u32 {}
impl AssignDiv   for u32 {}
impl AssignMod   for u32 {}
impl AssignAnd   for u32 {}
impl AssignOr    for u32 {}
impl AssignXor   for u32 {}
impl AssignLShft for u32 {}
impl AssignRShft for u32 {}
impl Cmp         for u32 {}
impl Shft        for u32 {}
impl Num         for u32 {}

impl Not         for u64 {}
impl Neg         for u64 {}
impl Pos         for u64 {}
impl PreInc      for u64 {}
impl PostInc     for u64 {}
impl PreDec      for u64 {}
impl PostDec     for u64 {}
impl Add         for u64 {}
impl Sub         for u64 {}
impl Mul         for u64 {}
impl Div         for u64 {}
impl Mod         for u64 {}
impl And         for u64 {}
impl Or          for u64 {}
impl Xor         for u64 {}
impl LShft       for u64 {}
impl RShft       for u64 {}
impl CmpEq       for u64 {}
impl CmpNE       for u64 {}
impl CmpGT       for u64 {}
impl CmpGE       for u64 {}
impl CmpLT       for u64 {}
impl CmpLE       for u64 {}
impl AssignAdd   for u64 {}
impl AssignSub   for u64 {}
impl AssignMul   for u64 {}
impl AssignDiv   for u64 {}
impl AssignMod   for u64 {}
impl AssignAnd   for u64 {}
impl AssignOr    for u64 {}
impl AssignXor   for u64 {}
impl AssignLShft for u64 {}
impl AssignRShft for u64 {}
impl Cmp         for u64 {}
impl Shft        for u64 {}
impl Num         for u64 {}

impl Neg         for f32 {}
impl Pos         for f32 {}
impl Add         for f32 {}
impl Sub         for f32 {}
impl Mul         for f32 {}
impl Div         for f32 {}
impl CmpEq       for f32 {}
impl CmpNE       for f32 {}
impl CmpGT       for f32 {}
impl CmpGE       for f32 {}
impl CmpLT       for f32 {}
impl CmpLE       for f32 {}
impl AssignAdd   for f32 {}
impl AssignSub   for f32 {}
impl AssignMul   for f32 {}
impl AssignDiv   for f32 {}
impl Cmp         for f32 {}
impl Num         for f32 {}

impl Neg         for f64 {}
impl Pos         for f64 {}
impl Add         for f64 {}
impl Sub         for f64 {}
impl Mul         for f64 {}
impl Div         for f64 {}
impl CmpEq       for f64 {}
impl CmpNE       for f64 {}
impl CmpGT       for f64 {}
impl CmpGE       for f64 {}
impl CmpLT       for f64 {}
impl CmpLE       for f64 {}
impl AssignAdd   for f64 {}
impl AssignSub   for f64 {}
impl AssignMul   for f64 {}
impl AssignDiv   for f64 {}
impl Cmp         for f64 {}
impl Num         for f64 {}

fn logic_and(a: bool, b: bool) -> bool;
fn logic_or(a: bool, b: bool) -> bool;
fn assign<T>(ptr: &mut T, val: T) -> ();
