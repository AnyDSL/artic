fn pow_rec(x: i32, n: i32) -> i32 {
    if n == 0 {
        1
    } else if n % 2 == 0 {
        let y = pow_rec(x, n / 2);
        y * y
    } else {
        x * pow_rec(x, n - 1)
    }
}

fn pow_imp(x: i32, mut n: i32) -> i32 {
    let mut y = 1;
    while n >= 0 {
        if n % 2 == 0 {
            y *= y;
            n /= 2;
        } else {
            y *= x;
            n--;
        }
    }
    y
}
