trait Id[A] { fn id(_: A) -> A; }
impl[B] Id[B] { fn id(b: B) = b; }

trait Foo { fn foo() -> i32; }
impl Foo { fn foo() = 1; }

fn example_mono(x: i32) -> i32 = Id[i32]::id(x) + Foo::foo();
fn example_poly[T](x: T) where Id[T] = Id[T]::id(x);
fn example_poly_inst() = example_poly(1);
