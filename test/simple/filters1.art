fn @(?n) pow(x: i32, n: i32) -> i32 {
    if n == 0 {
        1
    } else if n % 2 == 0 {
        let y = pow(x, n / 2);
        y * y
    } else {
        x * pow(x, n - 1)
    }
}

fn @(?(k + 3) & ?c) do_this(c: i32, k: i32) {
    pow(c, k + 3)
} 
fn @(?c | ?k) do_that(c: i32, k: i32) {
    c + k
} 
#[export]
fn pow5(x: i32) = pow(x, 5)
