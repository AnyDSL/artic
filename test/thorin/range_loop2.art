fn @range(body: fn (i32) -> ()) {
    fn loop(a: i32, b: i32) -> () {
        if a < b {
            body(a);
            loop(a + 1, b)
        }
    }
    loop
}

#[export]
fn foo(count: i32, buf: &mut[i32]) -> i32 {
    let mut acc = 0;
    fn inner(i: i32) {
        acc += buf(i);
    }
    range(inner)(0, count);
    range(inner)(0, count); // we now use 'inner' in two places so it cannot be inlined!
    acc
}

