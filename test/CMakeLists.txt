add_test(NAME version COMMAND artic --version)
add_test(NAME help    COMMAND artic --help)

add_test(NAME dup_invert  COMMAND artic --invert --invert)
add_test(NAME dup_strict  COMMAND artic --strict --strict)
add_test(NAME unknown_opt COMMAND artic --unknown-opt)
add_test(NAME empty_files COMMAND artic --strict)
add_test(NAME cannot_open COMMAND artic file-that-hopefully-does-not-exist.insane-extension)
add_test(NAME open_dir    COMMAND artic ${CMAKE_CURRENT_BINARY_DIR})
set_tests_properties(dup_invert dup_strict unknown_opt empty_files cannot_open open_dir PROPERTIES WILL_FAIL TRUE)

add_test(NAME valid_literals COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/literals.art)
add_test(NAME valid_string   COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/string.art)
add_test(NAME valid_comments COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/comments.art)
add_test(NAME valid_fn       COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/fn.art)
add_test(NAME valid_match    COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/match.art)
add_test(NAME valid_if       COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/if.art)
add_test(NAME valid_while    COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/while.art)
add_test(NAME valid_for      COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/for.art)
add_test(NAME valid_structs1 COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/structs1.art)
add_test(NAME valid_structs2 COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/structs2.art)
add_test(NAME valid_structs3 COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/structs3.art)
add_test(NAME valid_structs4 COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/structs4.art)
add_test(NAME valid_enums1   COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/enums1.art)
add_test(NAME valid_enums2   COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/enums2.art)
add_test(NAME valid_enums3   COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/enums3.art)
add_test(NAME valid_types    COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/types.art)
add_test(NAME valid_loops    COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/loops.art)
add_test(NAME valid_return   COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/return.art)
add_test(NAME valid_mut      COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/mut.art)
add_test(NAME valid_array    COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/array.art)
add_test(NAME valid_sort     COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/sort.art)
add_test(NAME valid_filter   COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/filter.art)
add_test(NAME valid_ops      COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/ops.art)
add_test(NAME valid_mod      COMMAND artic --print ${PROJECT_SOURCE_DIR}/test/valid/mod.art)

add_test(NAME invalid_comment     COMMAND artic --invert ${PROJECT_SOURCE_DIR}/test/invalid/comment.art)
add_test(NAME invalid_utf8        COMMAND artic --invert ${PROJECT_SOURCE_DIR}/test/invalid/utf8.art)
add_test(NAME invalid_dots        COMMAND artic --invert ${PROJECT_SOURCE_DIR}/test/invalid/dots.art)
add_test(NAME invalid_char        COMMAND artic --invert ${PROJECT_SOURCE_DIR}/test/invalid/char.art)
add_test(NAME invalid_literals    COMMAND artic --invert ${PROJECT_SOURCE_DIR}/test/invalid/literals.art)
add_test(NAME invalid_similar     COMMAND artic --invert ${PROJECT_SOURCE_DIR}/test/invalid/similar.art)
add_test(NAME invalid_string      COMMAND artic --invert ${PROJECT_SOURCE_DIR}/test/invalid/string.art)
add_test(NAME invalid_params      COMMAND artic --invert ${PROJECT_SOURCE_DIR}/test/invalid/params.art)
add_test(NAME invalid_bind        COMMAND artic --invert ${PROJECT_SOURCE_DIR}/test/invalid/bind.art)
add_test(NAME invalid_unreachable COMMAND artic --invert ${PROJECT_SOURCE_DIR}/test/invalid/unreachable.art)
add_test(NAME invalid_uninferable COMMAND artic --invert ${PROJECT_SOURCE_DIR}/test/invalid/uninferable.art)
add_test(NAME invalid_noret       COMMAND artic --invert ${PROJECT_SOURCE_DIR}/test/invalid/noret.art)
add_test(NAME invalid_structs1    COMMAND artic --invert ${PROJECT_SOURCE_DIR}/test/invalid/structs1.art)
add_test(NAME invalid_structs2    COMMAND artic --invert ${PROJECT_SOURCE_DIR}/test/invalid/structs2.art)
add_test(NAME invalid_structs3    COMMAND artic --invert ${PROJECT_SOURCE_DIR}/test/invalid/structs3.art)
add_test(NAME invalid_enums1      COMMAND artic --invert ${PROJECT_SOURCE_DIR}/test/invalid/enums1.art)
add_test(NAME invalid_enums2      COMMAND artic --invert ${PROJECT_SOURCE_DIR}/test/invalid/enums2.art)
add_test(NAME invalid_mut         COMMAND artic --invert ${PROJECT_SOURCE_DIR}/test/invalid/mut.art)
add_test(NAME invalid_filter      COMMAND artic --invert ${PROJECT_SOURCE_DIR}/test/invalid/filter.art)

if (CMAKE_BUILD_TYPE STREQUAL "Debug")
    setup_target_for_coverage_gcovr_html(NAME coverage EXECUTABLE ctest -j ${PROCESSOR_COUNT} DEPENDENCIES artic)
endif()
